version: "3"

vars:
  GIT_TAG: 
    sh: git tag --points-at HEAD
  GIT_COMMIT:
    sh: git rev-parse --short HEAD
  GIT_DIRTY:
    sh: git status -s
  VERSION:
    sh: if test "{{.GIT_DIRTY}}" != ""; then echo "{{.GIT_COMMIT}}-dirty"; elif test "{{.GIT_TAG}}" != ""; then echo "{{.GIT_TAG}}"; else echo "{{.GIT_COMMIT}}"; fi

tasks:
  check:
    cmds:
      - trunk check -a
  pre-commit:
    cmds:
      - trunk check --ci
  tidy:
    cmds:
      - find . -name 'go.mod' -print0 | xargs -0 -I {} /bin/bash -c 'pushd `dirname $1`; go mod tidy -go=1.18; popd' '_' '{}' \+
  update:
    cmds:
      - find . -name 'go.mod' -print0 | xargs -0 -I {} /bin/bash -c 'pushd `dirname $1`; go get -u ./...; popd' '_' '{}' \+
  gosums:
    cmds:
      - find . -name 'go.mod' -print0 | xargs -0 -I {} /bin/bash -c 'pushd `dirname $1`; git add go.mod go.sum; popd' '_' '{}' \+
  workuse:
    cmds:
      - go work init . || exit 0
      - find . -name 'go.mod' -print0 | xargs -0 -I {} /bin/bash -c 'go work use `dirname $1`' '_' '{}' \+
  releaseall:
    cmds:
      - find . -name 'go.mod' -print0 | xargs -0 -I {} /bin/bash -c 'dir=$(dirname $1); pkg=${dir:2}; hub release create -m "${pkg}/{{.GIT_TAG}}" "${pkg}/{{.GIT_TAG}}"' '_' '{}' \+
    preconditions:
      - test "{{.GIT_TAG}}" = "{{.VERSION}}"